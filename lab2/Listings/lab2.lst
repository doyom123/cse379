


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             LAB2, CODE, READWRITE
    2 00000000                 EXPORT           div_and_mod
    3 00000000         
    4 00000000         div_and_mod
    5 00000000 E92D5FFC        STMFD            r13!, {r2-r12, r14}
    6 00000004         
    7 00000004         ; Your code for the signed division/mod routine goes her
                       e.  
    8 00000004         ; The dividend is passed in r0 and the divisor in r1.
    9 00000004         ; The quotient is returned in r0 and the remainder in r1
                       . 
   10 00000004         
   11 00000004         ; r0 = dividend
   12 00000004         ; r1 = divisor
   13 00000004         ; r2 = counter
   14 00000004         ; r3 = quotient
   15 00000004         ; r4 = remainder
   16 00000004         
   17 00000004         ; RETURN r0 = quotient
   18 00000004         ;    r1 = remainder
   19 00000004         
   20 00000004 E3A0200F        MOV              r2, #15     ; Init counter to 1
                                                            5
   21 00000008 E3A03000        MOV              r3, #0      ; Init quotient to 
                                                            0
   22 0000000C E1A01781        LSL              r1, r1, #15 ; lsl divisor by 15
                                                            
   23 00000010 E2804000        ADD              r4, r0, #0  ; Set remainder to 
                                                            dividend
   24 00000014         
   25 00000014         loop
   26 00000014 E0544001        SUBS             r4, r4, r1  ; rem = rem - divis
                                                            
   27 00000018         
   28 00000018         ; if(remainder < 0)
   29 00000018 40844001        ADDMI            r4, r4, r1  ; rem = rem + divis
                                                            
   30 0000001C 41A03083        LSLMI            r3, #1      ; lsl quotient
   31 00000020         ; else
   32 00000020 51A03083        LSLPL            r3, #1      ; lsl quotient
   33 00000024 53833001        ORRPL            r3, r3, #1  ; set LSB of quot =
                                                             1
   34 00000028         
   35 00000028 E1A010A1        LSR              r1, r1, #1  ; right shift divis
                                                            
   36 0000002C E2522001        SUBS             r2, r2, #1  ; decrement counter
                                                            
   37 00000030 5AFFFFF7        BPL              loop        ; branch if count >
                                                            = 0
   38 00000034         
   39 00000034 E2830000        ADD              r0, r3, #0  ; set quot to r0
   40 00000038 E2841000        ADD              r1, r4, #0  ; set remain to r1
   41 0000003C         
   42 0000003C E8BD5FFC        LDMFD            r13!, {r2-r12, r14}
   43 00000040 E12FFF1E        BX               lr          ; Return to the C p
                                                            rogram 
   44 00000044         
   45 00000044         
   46 00000044                 END



ARM Macro Assembler    Page 2 


Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab2.d -o.\objects\lab2.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMS
IS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine
="__UVISION_VERSION SETA 522" --list=.\listings\lab2.lst lab2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

LAB2 00000000

Symbol: LAB2
   Definitions
      At line 1 in file lab2.s
   Uses
      None
Comment: LAB2 unused
div_and_mod 00000000

Symbol: div_and_mod
   Definitions
      At line 4 in file lab2.s
   Uses
      At line 2 in file lab2.s
Comment: div_and_mod used once
loop 00000014

Symbol: loop
   Definitions
      At line 25 in file lab2.s
   Uses
      At line 37 in file lab2.s
Comment: loop used once
3 symbols
335 symbols in table
