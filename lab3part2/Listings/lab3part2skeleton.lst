


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             lib, CODE, READWRITE
    2 00000000                 EXPORT           lab3
    3 00000000                 EXPORT           pin_connect_block_setup_for_uar
t0
    4 00000000         
    5 00000000         
    6 00000000 00000014 
                       U0LSR   EQU              0x14        ; UART0 Line Status
                                                             Register
    7 00000000         
    8 00000000         ; You'll want to define more constants to make your code
                        easier 
    9 00000000         ; to read and debug
   10 00000000         
   11 00000000         ; Memory allocated for user-entered strings
   12 00000000         
   13 00000000 45 6E 74 
              65 72 20 
              61 20 6E 
              75 6D 62 
              65 72 3A 
              20 20 00 prompt  =                "Enter a number:  ",0
   14 00000012         
   15 00000012         ; Additional strings may be defined here
   16 00000012         
   17 00000012 00 00           ALIGN
   18 00000014         
   19 00000014         
   20 00000014         
   21 00000014         lab3
   22 00000014 E92D4000        STMFD            SP!,{lr}    ; Store register lr
                                                             on stack
   23 00000018         
   24 00000018 EB000012        BL               read_character
   25 0000001C EB00001A        BL               output_character
   26 00000020 E8BD4000        LDMFD            sp!, {lr}
   27 00000024 E12FFF1E        BX               lr
   28 00000028         
   29 00000028         read_string                          ; base address of s
                                                            tring passed into r
                                                            4
   30 00000028 E92D4000        STMFD            SP!, {lr}   ; Store register lr
                                                             on stack
   31 0000002C         rs_loop
   32 0000002C EB00000D        BL               read_character
   33 00000030 E4C40001        STRB             r0, [r4], #1 ; store char into 
                                                            [r4], increment ind
                                                            ex
   34 00000034 E350000A        CMP              r0, #0x0A   ; check if char LF
   35 00000038 1AFFFFFB        BNE              rs_loop     ; loop if char != L
                                                            F
   36 0000003C E3A05000        MOV              r5, #0
   37 00000040 E5C45000        STRB             r5, [r4]    ; append NULL char
   38 00000044         
   39 00000044 E8BD4000        LDMFD            sp!, {lr}
   40 00000048 E12FFF1E        BX               lr
   41 0000004C         
   42 0000004C         output_string                        ; base address of s
                                                            tring passed into r



ARM Macro Assembler    Page 2 


                                                            4
   43 0000004C E92D4000        STMFD            SP!, {lr}
   44 00000050         os_loop
   45 00000050 E4D40001        LDRB             r0, [r4], #1 ; char loaded into
                                                             r0, r4 post-indexe
                                                            d base updated 
   46 00000054 EB00000C        BL               output_character ; output char 
                                                            in r0 
   47 00000058 E3500000        CMP              r0, #0      ; check if char is 
                                                            0
   48 0000005C 1AFFFFFB        BNE              os_loop     ; loop if char != 0
                                                            
   49 00000060         
   50 00000060 E8BD4000        LDMFD            sp!, {lr}
   51 00000064 E12FFF1E        BX               lr
   52 00000068         
   53 00000068         
   54 00000068         read_character                       ; Read Data
   55 00000068 E92D4000        STMFD            SP!,{lr}    ; Store register lr
                                                             on stack
   56 0000006C E59F005C        LDR              r0, =0xE000C000 ; Load UART0 Ba
                                                            se Address
   57 00000070         rstart
   58 00000070 E5D01014        LDRB             r1, [r0, #U0LSR] ; Load Status 
                                                            Register Addresss
   59 00000074         ;LDRB r4, [r1]  ; Load Status Register into r4
   60 00000074 E2112001        ANDS             r2, r1, #1  ; Test RDR in Statu
                                                            s Register
   61 00000078 0AFFFFFC        BEQ              rstart      ; if RDR == 0 -> rs
                                                            tart
   62 0000007C E5D03000        LDRB             r3, [r0]    ; else Read byte fr
                                                            om receive register
                                                            
   63 00000080 E1A00003        MOV              r0, r3      ; Return char in r0
                                                            
   64 00000084 E8BD4000        LDMFD            sp!, {lr}
   65 00000088 E12FFF1E        BX               lr
   66 0000008C         
   67 0000008C         output_character                     ; char passed in th
                                                            rough r0
   68 0000008C E92D4000        STMFD            SP!,{lr}    ; Store register lr
                                                             on stack
   69 00000090 E1A03000        MOV              r3, r0      ; Store char argume
                                                            nt into r3
   70 00000094 E59F0034        LDR              r0, =0xE000C000 ; Load UART0 Ba
                                                            se Address
   71 00000098         tstart
   72 00000098 E5D01014        LDRB             r1, [r0, #U0LSR] ; Load Status 
                                                            Register Addresss
   73 0000009C         ;LDRB r4, [r1]    ; Load Status Register into r4
   74 0000009C E2112020        ANDS             r2, r1, #32 ; test THRE in Stat
                                                            us Register
   75 000000A0 0AFFFFFC        BEQ              tstart      ; if THRE == 0 -> t
                                                            start
   76 000000A4 E5C03000        STRB             r3, [r0]    ; else Store byte i
                                                            n transmit register
                                                            
   77 000000A8 E8BD4000        LDMFD            sp!, {lr}
   78 000000AC E12FFF1E        BX               lr



ARM Macro Assembler    Page 3 


   79 000000B0         
   80 000000B0         
   81 000000B0         pin_connect_block_setup_for_uart0
   82 000000B0 E92D4003        STMFD            sp!, {r0, r1, lr}
   83 000000B4 E59F0018        LDR              r0, =0xE002C000 ; PINSEL0
   84 000000B8 E5901000        LDR              r1, [r0]
   85 000000BC E3811005        ORR              r1, r1, #5
   86 000000C0 E3C1100A        BIC              r1, r1, #0xA
   87 000000C4 E5801000        STR              r1, [r0]
   88 000000C8 E8BD4003        LDMFD            sp!, {r0, r1, lr}
   89 000000CC E12FFF1E        BX               lr
   90 000000D0         
   91 000000D0         
   92 000000D0         
   93 000000D0                 END
              E000C000 
              E002C000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab3part2skeleton.d -o.\objects\lab3part2skeleton.o -IC:\Keil_v5\ARM\RV3
1\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 522" --list=.\listings\lab3p
art2skeleton.lst lab3part2skeleton.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

lab3 00000014

Symbol: lab3
   Definitions
      At line 21 in file lab3part2skeleton.s
   Uses
      At line 2 in file lab3part2skeleton.s
Comment: lab3 used once
lib 00000000

Symbol: lib
   Definitions
      At line 1 in file lab3part2skeleton.s
   Uses
      None
Comment: lib unused
os_loop 00000050

Symbol: os_loop
   Definitions
      At line 44 in file lab3part2skeleton.s
   Uses
      At line 48 in file lab3part2skeleton.s
Comment: os_loop used once
output_character 0000008C

Symbol: output_character
   Definitions
      At line 67 in file lab3part2skeleton.s
   Uses
      At line 25 in file lab3part2skeleton.s
      At line 46 in file lab3part2skeleton.s

output_string 0000004C

Symbol: output_string
   Definitions
      At line 42 in file lab3part2skeleton.s
   Uses
      None
Comment: output_string unused
pin_connect_block_setup_for_uart0 000000B0

Symbol: pin_connect_block_setup_for_uart0
   Definitions
      At line 81 in file lab3part2skeleton.s
   Uses
      At line 3 in file lab3part2skeleton.s
Comment: pin_connect_block_setup_for_uart0 used once
prompt 00000000

Symbol: prompt
   Definitions
      At line 13 in file lab3part2skeleton.s
   Uses
      None
Comment: prompt unused
read_character 00000068




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: read_character
   Definitions
      At line 54 in file lab3part2skeleton.s
   Uses
      At line 24 in file lab3part2skeleton.s
      At line 32 in file lab3part2skeleton.s

read_string 00000028

Symbol: read_string
   Definitions
      At line 29 in file lab3part2skeleton.s
   Uses
      None
Comment: read_string unused
rs_loop 0000002C

Symbol: rs_loop
   Definitions
      At line 31 in file lab3part2skeleton.s
   Uses
      At line 35 in file lab3part2skeleton.s
Comment: rs_loop used once
rstart 00000070

Symbol: rstart
   Definitions
      At line 57 in file lab3part2skeleton.s
   Uses
      At line 61 in file lab3part2skeleton.s
Comment: rstart used once
tstart 00000098

Symbol: tstart
   Definitions
      At line 71 in file lab3part2skeleton.s
   Uses
      At line 75 in file lab3part2skeleton.s
Comment: tstart used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

U0LSR 00000014

Symbol: U0LSR
   Definitions
      At line 6 in file lab3part2skeleton.s
   Uses
      At line 58 in file lab3part2skeleton.s
      At line 72 in file lab3part2skeleton.s

1 symbol
347 symbols in table
